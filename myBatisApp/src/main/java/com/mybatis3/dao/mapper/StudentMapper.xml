<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis3.dao.mapper.StudentMapper">
	<!-- ############################## resultMap정의 ############################# -->
	<resultMap 	id="studentResultMap" 
				type="com.mybatis3.domain.Student" 
				autoMapping="true">
		<id column="STUD_ID" property="studId"/>
		<!-- 
		<result column="NAME" property="name"/>
		<result column="EMAIL" property="email"/>
		<result column="PHONE" property="phone"/>
		<result column="DOB" property="dob"/>
		 -->
		<association 	property="address" 
						autoMapping="true"
						javaType="com.mybatis3.domain.Address">
					<!-- 
					<id column="ADDR_ID" property="addrId"/>
					<result column="STREET" property="street"/>
					<result column="CITY" property="city"/>
					<result column="STATE" property="state"/>
					<result column="ZIP" property="zip"/>
					<result column="COUNTRY" property="country"/>
					 -->
		</association>
		<!-- 
		<collection property="courses" 
					javaType="java.util.List" 
					ofType="com.mybatis3.domain.Course" autoMapping="true">
					<result column="COURSE_NAME" property="name"/>
		</collection> 
		-->
		<collection property="courses" 
					javaType="java.util.List" 
					resultMap="com.mybatis3.dao.mapper.CourseMapper.courseResultMap" 
					autoMapping="true">
					
		</collection> 
	</resultMap>
	<!-- ########################################################################### -->
	
	
	
	<!-- 
	/**************************************************
						INSERT
	***************************************************/
		parameterType: DTO,VO,Domain
	 -->
	<insert id="insertStudentBySequence"  
			parameterType="com.mybatis3.domain.Student">
		insert into students(stud_id,name,phone,email,dob)
		values(students_stud_id_seq.nextval,#{name},#{phone},#{email},#{dob})
	</insert>
	<insert id="insertStudentBySequenceReturnPrimaryKey"
			 parameterType="com.mybatis3.domain.Student">
		<selectKey order="BEFORE" resultType="int" keyProperty="studId">
			select students_stud_id_seq.nextval from dual
		</selectKey>
		insert into students(stud_id,name,phone,email,dob)
		values(#{studId},#{name},#{phone},#{email},#{dob})
	</insert>
	<!-- 
	/**************************************************
						UPDATE
	***************************************************/
		parameterType: DTO,VO,Domain
	 -->
	<update id="updateStudentById" 
			parameterType="com.mybatis3.domain.Student">
		update students set name=#{name},
							email=#{email},
							phone=#{phone},
							dob=#{dob}
		where stud_id=#{studId}					
	</update>
	
	<!-- 
	/**************************************************
						DELETE
	***************************************************/
		parameterType: java.lang.Integer,java.lang.String
	-->
	<delete id="deleteStudentById" parameterType="int" >
		delete from students where stud_id=#{studId}
	</delete>
	<delete id="deleteStudentByName" >
	</delete>
	<delete id="deleteStudentByNameLike">
	</delete>
	
	<!-- 
	/**************************************************
	 5. SELECT[students + address + courses[course_enrollment] JOIN( 1 : 1 : N )
	**************************************************/
	/*
	 * resultMap : studentWithAddressAndCoursesResultMap
	 */
	-->
	<select id="findStudentByIdWithAddressAndCourses" >
			
	</select>
	
	<!-- 
	/********************************************************************
	4. SELECT[students + course_enrollment [ +course ] JOIN( 1 : N )
	 ********************************************************************/
	/*
	 * resultMap : studentResultMap
	 */
	 -->
	<select id="findStudentByIdWithCourses" 
			parameterType="int"
			resultMap="studentResultMap">
		select  s.stud_id,s.name ,s.email,s.phone,s.dob ,
        		c.course_id,c.name as course_name ,
        		c.description,c.start_date,c.end_date
		from students s 
		left outer join course_enrollment ce
		on s.stud_id = ce.stud_id
		left outer join courses c
		on ce.course_id=c.course_id where s.stud_id=#{studId}
	</select> 
	
	<!-- 
	/**************************************************
	 3. SELECT[student + address JOIN]( 1 : 1 )
	 **************************************************/
	/*
	 * resultMap : studentResultMap
	 */
	 -->
	<select id="findStudentByIdWithAddress"  parameterType="int" 
											 resultMap="studentResultMap">
		select stud_id, name,dob,email,phone, a.addr_id, street, city, state, zip, country
  		FROM students s 
      	left outer join addresses a 
      	on s.addr_id=a.addr_id
      	where s.stud_id=#{studId}
	</select>
	
	<!-- 
	/**************************************************
	1. SELECT[결과타입이 DTO[DTO List] 객체인경우] 
	**************************************************/
	-->
	<!-- 
		resultType :  Dto
	 -->
	<select id="findStudentById"  	parameterType="java.lang.Integer" 
									resultType="com.mybatis3.domain.Student">
		select stud_id as studid ,name,email,dob,phone from students 
		where stud_id=#{studId}
	</select>
	<select id="findAllStudents" resultType="com.mybatis3.domain.Student">
		select stud_id as studid,name,email,dob from students
	</select>
	<!-- 
	  resultMap :  DTO
	 -->
	<select id="findStudentByIdResultMap" parameterType="java.lang.Integer" 
										resultMap="studentResultMap">
		select stud_id ,name,email,dob,phone from students where stud_id=#{studId}
	</select>
	<select id="findAllStudentsResultMap"  resultMap="studentResultMap">
		select stud_id ,name,email,dob,phone from students
	</select>
	<!-- 
	/**********************************************************************
	 2. SELECT[결과타입이 Wrapper(String)[Wrapper(String) List]객체인경우] 
	*******************************************************************/
	/*
	 * resultType :  String,Wrapper,List<Wrapper>,List<String>
	 */
	  -->
	 <select id="findStudentNameById" 	parameterType="java.lang.Integer" 
	 									resultType="java.lang.String" >
	 	select name from students where stud_id=#{studId}
	 </select> 
	 <select id="findStudentNameList" resultType="java.lang.String" >
	 	select name from students
	 </select> 
	 
	 <!-- 
	/**************************************************
	 결과데이타를 Map(HashMap)에 담아서 반환할수있다
	***************************************************/
		resultType:Map,HashMap	
	-->
	<select id="findStudentByIdMap">
		
	</select>
	<select id="findAllStudentsMapList" >
		
	</select>
</mapper>